// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spacegrower.remote.registry.proto

package remote

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Raw                  []byte   `protobuf:"bytes,2,opt,name=Raw,proto3" json:"Raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceInfo) Reset()         { *m = ServiceInfo{} }
func (m *ServiceInfo) String() string { return proto.CompactTextString(m) }
func (*ServiceInfo) ProtoMessage()    {}
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_31602a7e9957a42b, []int{0}
}

func (m *ServiceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceInfo.Unmarshal(m, b)
}
func (m *ServiceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceInfo.Marshal(b, m, deterministic)
}
func (m *ServiceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceInfo.Merge(m, src)
}
func (m *ServiceInfo) XXX_Size() int {
	return xxx_messageInfo_ServiceInfo.Size(m)
}
func (m *ServiceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceInfo proto.InternalMessageInfo

func (m *ServiceInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServiceInfo) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

type Command struct {
	Command              string            `protobuf:"bytes,1,opt,name=Command,proto3" json:"Command,omitempty"`
	Args                 map[string]string `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_31602a7e9957a42b, []int{1}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Command) GetArgs() map[string]string {
	if m != nil {
		return m.Args
	}
	return nil
}

type ResolveInfo struct {
	Address              map[string][]byte `protobuf:"bytes,1,rep,name=Address,proto3" json:"Address,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Config               []byte            `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResolveInfo) Reset()         { *m = ResolveInfo{} }
func (m *ResolveInfo) String() string { return proto.CompactTextString(m) }
func (*ResolveInfo) ProtoMessage()    {}
func (*ResolveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_31602a7e9957a42b, []int{2}
}

func (m *ResolveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveInfo.Unmarshal(m, b)
}
func (m *ResolveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveInfo.Marshal(b, m, deterministic)
}
func (m *ResolveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveInfo.Merge(m, src)
}
func (m *ResolveInfo) XXX_Size() int {
	return xxx_messageInfo_ResolveInfo.Size(m)
}
func (m *ResolveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveInfo proto.InternalMessageInfo

func (m *ResolveInfo) GetAddress() map[string][]byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ResolveInfo) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type TargetInfo struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetInfo) Reset()         { *m = TargetInfo{} }
func (m *TargetInfo) String() string { return proto.CompactTextString(m) }
func (*TargetInfo) ProtoMessage()    {}
func (*TargetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_31602a7e9957a42b, []int{3}
}

func (m *TargetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetInfo.Unmarshal(m, b)
}
func (m *TargetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetInfo.Marshal(b, m, deterministic)
}
func (m *TargetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetInfo.Merge(m, src)
}
func (m *TargetInfo) XXX_Size() int {
	return xxx_messageInfo_TargetInfo.Size(m)
}
func (m *TargetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TargetInfo proto.InternalMessageInfo

func (m *TargetInfo) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *TargetInfo) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceInfo)(nil), "remote.ServiceInfo")
	proto.RegisterType((*Command)(nil), "remote.Command")
	proto.RegisterMapType((map[string]string)(nil), "remote.Command.ArgsEntry")
	proto.RegisterType((*ResolveInfo)(nil), "remote.ResolveInfo")
	proto.RegisterMapType((map[string][]byte)(nil), "remote.ResolveInfo.AddressEntry")
	proto.RegisterType((*TargetInfo)(nil), "remote.TargetInfo")
}

func init() {
	proto.RegisterFile("spacegrower.remote.registry.proto", fileDescriptor_31602a7e9957a42b)
}

var fileDescriptor_31602a7e9957a42b = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0x65, 0xe0, 0x3d, 0x78, 0xbd, 0x90, 0xbc, 0x97, 0x81, 0xbc, 0xd4, 0xc6, 0x45, 0xed, 0xaa,
	0x1b, 0x2b, 0xc1, 0x44, 0x94, 0x1d, 0xa2, 0x0b, 0x37, 0x2e, 0xaa, 0x71, 0xe1, 0xae, 0xc2, 0xa5,
	0x69, 0xa4, 0x1d, 0x72, 0xa7, 0x42, 0x88, 0x3f, 0xc1, 0xdf, 0xe0, 0x7f, 0x35, 0x33, 0x9d, 0x91,
	0xc6, 0x98, 0xb8, 0xbb, 0x1f, 0xe7, 0xcc, 0x3d, 0xf7, 0x9e, 0x81, 0x23, 0xb9, 0x4e, 0xe6, 0x98,
	0x92, 0xd8, 0x22, 0x45, 0x84, 0xb9, 0x28, 0x31, 0x22, 0x4c, 0x33, 0x59, 0xd2, 0x2e, 0x5a, 0x93,
	0x28, 0x05, 0x6f, 0x57, 0xe5, 0xe0, 0x02, 0xba, 0x77, 0x48, 0x9b, 0x6c, 0x8e, 0x37, 0xc5, 0x52,
	0x70, 0x17, 0x3a, 0x0f, 0x48, 0x32, 0x13, 0x85, 0xcb, 0x7c, 0x16, 0x3a, 0xb1, 0x4d, 0xf9, 0x3f,
	0x68, 0xc5, 0xc9, 0xd6, 0x6d, 0xfa, 0x2c, 0xec, 0xc5, 0x2a, 0x0c, 0xde, 0x18, 0x74, 0x66, 0x22,
	0xcf, 0x93, 0x62, 0xa1, 0x78, 0x26, 0xb4, 0x3c, 0xdb, 0x39, 0x86, 0x5f, 0x53, 0x4a, 0xa5, 0xdb,
	0xf4, 0x5b, 0x61, 0x77, 0x74, 0x60, 0xe5, 0x98, 0x76, 0xa4, 0x7a, 0xd7, 0x45, 0x49, 0xbb, 0x58,
	0xc3, 0xbc, 0x31, 0x38, 0x9f, 0x25, 0x35, 0xf3, 0x19, 0x77, 0xe6, 0x45, 0x15, 0xf2, 0x01, 0xfc,
	0xde, 0x24, 0xab, 0x17, 0xd4, 0x3a, 0x9c, 0xb8, 0x4a, 0x26, 0xcd, 0x73, 0x16, 0xbc, 0x33, 0xe8,
	0xc6, 0x28, 0xc5, 0x6a, 0x53, 0x6d, 0x32, 0x81, 0xce, 0x74, 0xb1, 0x20, 0x94, 0xd2, 0x65, 0x7a,
	0xb4, 0x6f, 0x47, 0xd7, 0x50, 0x91, 0x81, 0x54, 0x0a, 0x2c, 0x81, 0xff, 0x87, 0xf6, 0x4c, 0x14,
	0xcb, 0x2c, 0x35, 0xeb, 0x9a, 0xcc, 0x9b, 0x40, 0xaf, 0x4e, 0xf8, 0x49, 0x5f, 0xaf, 0xae, 0xef,
	0x0a, 0xe0, 0x3e, 0xa1, 0x14, 0x4b, 0xad, 0xee, 0x10, 0x9c, 0xdb, 0x24, 0x47, 0xed, 0x93, 0xe1,
	0xef, 0x0b, 0xea, 0x9a, 0xc6, 0x14, 0xb3, 0xa7, 0x4d, 0x47, 0xaf, 0xf0, 0x27, 0x36, 0x46, 0xf2,
	0x33, 0x1b, 0x23, 0xf1, 0xbe, 0x5d, 0xae, 0x66, 0xa6, 0xf7, 0xf7, 0xcb, 0xb1, 0x83, 0x46, 0xc8,
	0x86, 0x8c, 0x8f, 0x15, 0x4f, 0x9f, 0x80, 0x38, 0xb7, 0x90, 0xbd, 0x36, 0xaf, 0xff, 0xcd, 0xa1,
	0x82, 0xc6, 0x90, 0x5d, 0x0e, 0x1e, 0x79, 0xed, 0x63, 0x9d, 0x54, 0xa8, 0xa7, 0xb6, 0xfe, 0x50,
	0xa7, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0x04, 0x54, 0x58, 0x75, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RegistryClient is the client API for Registry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistryClient interface {
	Register(ctx context.Context, opts ...grpc.CallOption) (Registry_RegisterClient, error)
	Resolver(ctx context.Context, in *TargetInfo, opts ...grpc.CallOption) (Registry_ResolverClient, error)
}

type registryClient struct {
	cc grpc.ClientConnInterface
}

func NewRegistryClient(cc grpc.ClientConnInterface) RegistryClient {
	return &registryClient{cc}
}

func (c *registryClient) Register(ctx context.Context, opts ...grpc.CallOption) (Registry_RegisterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Registry_serviceDesc.Streams[0], "/remote.Registry/Register", opts...)
	if err != nil {
		return nil, err
	}
	x := &registryRegisterClient{stream}
	return x, nil
}

type Registry_RegisterClient interface {
	Send(*ServiceInfo) error
	Recv() (*Command, error)
	grpc.ClientStream
}

type registryRegisterClient struct {
	grpc.ClientStream
}

func (x *registryRegisterClient) Send(m *ServiceInfo) error {
	return x.ClientStream.SendMsg(m)
}

func (x *registryRegisterClient) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *registryClient) Resolver(ctx context.Context, in *TargetInfo, opts ...grpc.CallOption) (Registry_ResolverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Registry_serviceDesc.Streams[1], "/remote.Registry/Resolver", opts...)
	if err != nil {
		return nil, err
	}
	x := &registryResolverClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Registry_ResolverClient interface {
	Recv() (*ResolveInfo, error)
	grpc.ClientStream
}

type registryResolverClient struct {
	grpc.ClientStream
}

func (x *registryResolverClient) Recv() (*ResolveInfo, error) {
	m := new(ResolveInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RegistryServer is the server API for Registry service.
type RegistryServer interface {
	Register(Registry_RegisterServer) error
	Resolver(*TargetInfo, Registry_ResolverServer) error
}

// UnimplementedRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedRegistryServer struct {
}

func (*UnimplementedRegistryServer) Register(srv Registry_RegisterServer) error {
	return status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedRegistryServer) Resolver(req *TargetInfo, srv Registry_ResolverServer) error {
	return status.Errorf(codes.Unimplemented, "method Resolver not implemented")
}

func RegisterRegistryServer(s *grpc.Server, srv RegistryServer) {
	s.RegisterService(&_Registry_serviceDesc, srv)
}

func _Registry_Register_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RegistryServer).Register(&registryRegisterServer{stream})
}

type Registry_RegisterServer interface {
	Send(*Command) error
	Recv() (*ServiceInfo, error)
	grpc.ServerStream
}

type registryRegisterServer struct {
	grpc.ServerStream
}

func (x *registryRegisterServer) Send(m *Command) error {
	return x.ServerStream.SendMsg(m)
}

func (x *registryRegisterServer) Recv() (*ServiceInfo, error) {
	m := new(ServiceInfo)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Registry_Resolver_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TargetInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RegistryServer).Resolver(m, &registryResolverServer{stream})
}

type Registry_ResolverServer interface {
	Send(*ResolveInfo) error
	grpc.ServerStream
}

type registryResolverServer struct {
	grpc.ServerStream
}

func (x *registryResolverServer) Send(m *ResolveInfo) error {
	return x.ServerStream.SendMsg(m)
}

var _Registry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remote.Registry",
	HandlerType: (*RegistryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Register",
			Handler:       _Registry_Register_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Resolver",
			Handler:       _Registry_Resolver_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "spacegrower.remote.registry.proto",
}
